#seperatestatemachine
#produceprecompilecebf
;;#commentcode
#include lib/standard.cebf
;;all a 1
;;all str 3
;;set.n $a 5
;;int8.to_string $a $str
;;out.n $str

;; Outputs a string at the specified address to the console and then switches back to process outputs
;; output_string_in_console <string_address>
macro output_string_in_console 1

bash.switch_to_console
out.n $0
bash.switch_to_process 0
macroend

;; response_code is a directly passed string, response body a address
;; http.send_response <response_code> <response_body>
macro http.send_response 2
;; Send the response code
wrt.s "HTTP/1.1 "
out.n $0
wrt.s "\n"
wrt.s "Content-Type: text/plain\n"
wrt.s "Server: ce-brainfuck-http\n"
all content_length 6 ;; may need to be increased
string.get_length $content_length $1
wrt.s "Content-Length: "
int8.to_string $content_length $content_length
out.n $content_length
wrt.s "\n\n"
;; Send the response body
out.n $1
;;
macroend

;; Connect with a netcat server
:handle_new_connection
;; Here we recreate the netcat process to accept new requests
bash.switch_to_process 0
bash.kill_process
bash.set_command "nc -lvnp 5000"
bash.start_command_in_buffer
bash.switch_to_console
wrt.s "Started netcat listener on port 5000\n"
bash.switch_to_process 0
all first_line 100
;; First line is connection by netcat, just output it
in.line $first_line
output_string_in_console $first_line
http.send_response 200 $first_line
;;First line in http request is method and path